from flask import Flask, request, jsonify, abort
import telebot
import os

BOT_TOKEN = os.environ['BOT_TOKEN']
bot = telebot.TeleBot(BOT_TOKEN)

from config import CHANNELS

app = Flask(__name__)

# --- –§—É–Ω–∫—Ü—ñ—è –≤–∏–¥–∞—á—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è ---
def handle_successful_payment(user_id, course_id):
    try:
        chat_id = CHANNELS.get(course_id)
        if not chat_id:
            bot.send_message(user_id, "‚ùå –ö–∞–Ω–∞–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Ü—å–æ–≥–æ –∫—É—Ä—Å—É.")
            return
        invite = bot.create_chat_invite_link(
            chat_id=chat_id,
            member_limit=1,
            creates_join_request=False
        )
        bot.send_message(user_id, f"‚úÖ –û–ø–ª–∞—Ç—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!\nüîó –û—Å—å —Ç–≤–æ—î –ø–æ—Å–∏–ª–∞–Ω–Ω—è:\n{invite.invite_link}")
    except Exception as e:
        bot.send_message(user_id, f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞—á—ñ –¥–æ—Å—Ç—É–ø—É:\n{e}")
        print(f"[ERROR] handle_successful_payment: {e}")

# --- –ï–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è Telegram webhook ---
WEBHOOK_URL_BASE = os.environ.get('WEBHOOK_URL_BASE')
WEBHOOK_URL_PATH = f"/webhook/{BOT_TOKEN}"

@app.route(WEBHOOK_URL_PATH, methods=["POST"])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return "", 200
    else:
        abort(403)

@app.route("/", methods=["GET"])
def home():
    return "–°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î!"

# --- –û–±—Ä–æ–±–∫–∞ callback –≤—ñ–¥ –∫–Ω–æ–ø–∫–∏ "–Ø –æ–ø–ª–∞—Ç–∏–≤" ---
@bot.callback_query_handler(func=lambda call: call.data.startswith("confirm_payment"))
def confirm_payment_callback(call):
    cid = call.data.split(":")[1]
    user = call.from_user
    chat_id = call.message.chat.id

    # –¢—É—Ç –º–æ–∂–Ω–∞ –ø–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –∞–¥–º—ñ–Ω–∞ –∞–±–æ –ø—Ä–æ—Å—Ç–æ –≤–∏–¥–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤—ñ–¥—Ä–∞–∑—É:
    handle_successful_payment(user.id, cid)
    bot.answer_callback_query(call.id, "–î–æ—Å—Ç—É–ø –≤–∏–¥–∞–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä –ø–æ—à—Ç—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")

if __name__ == "__main__":
    bot.remove_webhook()
    webhook_url = WEBHOOK_URL_BASE + WEBHOOK_URL_PATH
    if bot.set_webhook(url=webhook_url):
        print(f"Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {webhook_url}")
    else:
        print("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ webhook")
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
